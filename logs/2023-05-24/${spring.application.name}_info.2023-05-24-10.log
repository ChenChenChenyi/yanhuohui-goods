[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:26:18,723 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url consumer://172.21.240.1/org.apache.dubbo.rpc.service.GenericService?application=yanhuohui-goods&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&pid=10124&qos.enable=false&release=2.7.13&router=-default,revisionRouter&side=consumer&sticky=false&timestamp=1684840633148&version=1.0.0, urls: [empty://172.21.240.1/org.apache.dubbo.rpc.service.GenericService?application=yanhuohui-goods&category=providers&check=false&dubbo=2.0.2&generic=true&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&pid=10124&qos.enable=false&release=2.7.13&router=-default,revisionRouter&side=consumer&sticky=false&timestamp=1684840633148&version=1.0.0], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:26:18,795 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][DefaultMigrationAddressComparator.java:37] -  [DUBBO] No instance address available, will not migrate., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:26:24,456 INFO [NettyClientWorker-4-2][NettyClientHandler.java:76] -  [DUBBO] The connection of /172.21.240.1:58752 -> /172.21.240.1:20880 is disconnected., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:26:55,211 INFO [dubbo-client-idleCheck-thread-1][ReconnectTimerTask.java:48] -  [DUBBO] Initial connection to HeaderExchangeClient [channel=org.apache.dubbo.remoting.transport.netty4.NettyClient [/172.21.240.1:58752 -> /172.21.240.1:20880]], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:26:55,222 INFO [dubbo-client-idleCheck-thread-1][NettyChannel.java:201] -  [DUBBO] Close netty channel [id: 0xf4f2bf9e, L:/172.21.240.1:58752 ! R:/172.21.240.1:20880], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:26:57,339 ERROR [dubbo-client-idleCheck-thread-1][ReconnectTimerTask.java:51] -  [DUBBO] Fail to connect to HeaderExchangeClient [channel=org.apache.dubbo.remoting.transport.netty4.NettyClient [/172.21.240.1:58752 -> /172.21.240.1:20880]], dubbo version: 2.7.13, current host: 172.21.240.1
org.apache.dubbo.remoting.RemotingException: client(url: dubbo://172.21.240.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20880&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-setting&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10124&qos.enable=false&register.ip=172.21.240.1&release=2.7.13&remote.application=yanhuohui-setting&revision=2.2.7.RELEASE&router=-default,revisionRouter&sca_revision=0&service.name=ServiceBean:yanhuohui-setting/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=consumer&sticky=false&timestamp=1684840558917&version=1.0.0) failed to connect to server /172.21.240.1:20880, error message is:Connection refused: no further information: /172.21.240.1:20880
	at org.apache.dubbo.remoting.transport.netty4.NettyClient.doConnect(NettyClient.java:169)
	at org.apache.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:198)
	at org.apache.dubbo.remoting.transport.AbstractClient.reconnect(AbstractClient.java:254)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeClient.reconnect(HeaderExchangeClient.java:166)
	at org.apache.dubbo.remoting.exchange.support.header.ReconnectTimerTask.doTask(ReconnectTimerTask.java:49)
	at org.apache.dubbo.remoting.exchange.support.header.AbstractTimerTask.run(AbstractTimerTask.java:87)
	at org.apache.dubbo.common.timer.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:648)
	at org.apache.dubbo.common.timer.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:727)
	at org.apache.dubbo.common.timer.HashedWheelTimer$Worker.run(HashedWheelTimer.java:449)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /172.21.240.1:20880
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:27:27,753 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url consumer://172.21.240.1/com.chenyi.yanhuohui.setting.api.GoodsInfoService?application=yanhuohui-goods&category=providers,configurators,routers&dubbo=2.0.2&init=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&pid=10124&qos.enable=false&release=2.7.13&revision=1.0-SNAPSHOT&side=consumer&sticky=false&timestamp=1684840634351, urls: [dubbo://172.21.240.1:20880/com.chenyi.yanhuohui.setting.api.GoodsInfoService?anyhost=true&application=yanhuohui-setting&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&path=com.chenyi.yanhuohui.setting.api.GoodsInfoService&pid=20772&protocol=dubbo&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.setting.api.GoodsInfoService&side=provider&timestamp=1684895245994], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:27:58,200 INFO [dubbo-client-idleCheck-thread-1][ReconnectTimerTask.java:48] -  [DUBBO] Initial connection to HeaderExchangeClient [channel=org.apache.dubbo.remoting.transport.netty4.NettyClient [/172.21.240.1:58752 -> /172.21.240.1:20880]], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:27:58,202 INFO [dubbo-client-idleCheck-thread-1][NettyChannel.java:201] -  [DUBBO] Close netty channel [id: 0xf4f2bf9e, L:/172.21.240.1:58752 ! R:/172.21.240.1:20880], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:27:58,229 INFO [dubbo-client-idleCheck-thread-1][NettyClient.java:145] -  [DUBBO] Close old netty channel [id: 0xf4f2bf9e, L:/172.21.240.1:58752 ! R:/172.21.240.1:20880] on create new netty channel [id: 0x99bb1bea, L:/172.21.240.1:60388 - R:/172.21.240.1:20880], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:27:58,230 INFO [dubbo-client-idleCheck-thread-1][AbstractClient.java:207] -  [DUBBO] Successed connect to server /172.21.240.1:20880 from NettyClient 172.21.240.1 using dubbo version 2.7.13, channel is NettyChannel [channel=[id: 0x99bb1bea, L:/172.21.240.1:60388 - R:/172.21.240.1:20880]], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:27:58,234 INFO [NettyClientWorker-4-4][NettyClientHandler.java:62] -  [DUBBO] The connection of /172.21.240.1:60388 -> /172.21.240.1:20880 is established., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:28:20,882 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url consumer://172.21.240.1/org.apache.dubbo.rpc.service.GenericService?application=yanhuohui-goods&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&pid=10124&qos.enable=false&release=2.7.13&router=-default,revisionRouter&side=consumer&sticky=false&timestamp=1684840633148&version=1.0.0, urls: [dubbo://172.21.240.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-setting&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=20772&protocol=dubbo&release=2.7.13&revision=2.2.7.RELEASE&service.name=ServiceBean:yanhuohui-setting/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=provider&timestamp=1684895248325&version=1.0.0], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:28:20,920 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][DefaultMigrationAddressComparator.java:37] -  [DUBBO] No instance address available, will not migrate., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:30:48,724 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url consumer://172.21.240.1/com.chenyi.yanhuohui.setting.api.GoodsInfoService?application=yanhuohui-goods&category=providers,configurators,routers&dubbo=2.0.2&init=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&pid=10124&qos.enable=false&release=2.7.13&revision=1.0-SNAPSHOT&side=consumer&sticky=false&timestamp=1684840634351, urls: [empty://172.21.240.1/com.chenyi.yanhuohui.setting.api.GoodsInfoService?application=yanhuohui-goods&category=providers&dubbo=2.0.2&init=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&pid=10124&qos.enable=false&release=2.7.13&revision=1.0-SNAPSHOT&side=consumer&sticky=false&timestamp=1684840634351], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:30:58,280 INFO [NettyClientWorker-4-4][NettyClientHandler.java:76] -  [DUBBO] The connection of /172.21.240.1:60388 -> /172.21.240.1:20880 is disconnected., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:31:01,192 INFO [dubbo-client-idleCheck-thread-1][ReconnectTimerTask.java:48] -  [DUBBO] Initial connection to HeaderExchangeClient [channel=org.apache.dubbo.remoting.transport.netty4.NettyClient [/172.21.240.1:60388 -> /172.21.240.1:20880]], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:31:01,194 INFO [dubbo-client-idleCheck-thread-1][NettyChannel.java:201] -  [DUBBO] Close netty channel [id: 0x99bb1bea, L:/172.21.240.1:60388 ! R:/172.21.240.1:20880], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:31:03,264 ERROR [dubbo-client-idleCheck-thread-1][ReconnectTimerTask.java:51] -  [DUBBO] Fail to connect to HeaderExchangeClient [channel=org.apache.dubbo.remoting.transport.netty4.NettyClient [/172.21.240.1:60388 -> /172.21.240.1:20880]], dubbo version: 2.7.13, current host: 172.21.240.1
org.apache.dubbo.remoting.RemotingException: client(url: dubbo://172.21.240.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20880&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-setting&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=10124&qos.enable=false&register.ip=172.21.240.1&release=2.7.13&remote.application=yanhuohui-setting&revision=2.2.7.RELEASE&router=-default,revisionRouter&sca_revision=0&service.name=ServiceBean:yanhuohui-setting/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=consumer&sticky=false&timestamp=1684840558917&version=1.0.0) failed to connect to server /172.21.240.1:20880, error message is:Connection refused: no further information: /172.21.240.1:20880
	at org.apache.dubbo.remoting.transport.netty4.NettyClient.doConnect(NettyClient.java:169)
	at org.apache.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:198)
	at org.apache.dubbo.remoting.transport.AbstractClient.reconnect(AbstractClient.java:254)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeClient.reconnect(HeaderExchangeClient.java:166)
	at org.apache.dubbo.remoting.exchange.support.header.ReconnectTimerTask.doTask(ReconnectTimerTask.java:49)
	at org.apache.dubbo.remoting.exchange.support.header.AbstractTimerTask.run(AbstractTimerTask.java:87)
	at org.apache.dubbo.common.timer.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:648)
	at org.apache.dubbo.common.timer.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:727)
	at org.apache.dubbo.common.timer.HashedWheelTimer$Worker.run(HashedWheelTimer.java:449)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /172.21.240.1:20880
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:31:20,964 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url consumer://172.21.240.1/org.apache.dubbo.rpc.service.GenericService?application=yanhuohui-goods&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&pid=10124&qos.enable=false&release=2.7.13&router=-default,revisionRouter&side=consumer&sticky=false&timestamp=1684840633148&version=1.0.0, urls: [empty://172.21.240.1/org.apache.dubbo.rpc.service.GenericService?application=yanhuohui-goods&category=providers&check=false&dubbo=2.0.2&generic=true&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&pid=10124&qos.enable=false&release=2.7.13&router=-default,revisionRouter&side=consumer&sticky=false&timestamp=1684840633148&version=1.0.0], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:31:20,974 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][DefaultMigrationAddressComparator.java:37] -  [DUBBO] No instance address available, will not migrate., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:31:28,569 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url consumer://172.21.240.1/com.chenyi.yanhuohui.setting.api.GoodsInfoService?application=yanhuohui-goods&category=providers,configurators,routers&dubbo=2.0.2&init=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&pid=10124&qos.enable=false&release=2.7.13&revision=1.0-SNAPSHOT&side=consumer&sticky=false&timestamp=1684840634351, urls: [dubbo://172.21.240.1:20880/com.chenyi.yanhuohui.setting.api.GoodsInfoService?anyhost=true&application=yanhuohui-setting&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&path=com.chenyi.yanhuohui.setting.api.GoodsInfoService&pid=11876&protocol=dubbo&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.setting.api.GoodsInfoService&side=provider&timestamp=1684895486966], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:31:35,041 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url consumer://172.21.240.1/org.apache.dubbo.rpc.service.GenericService?application=yanhuohui-goods&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&pid=10124&qos.enable=false&release=2.7.13&router=-default,revisionRouter&side=consumer&sticky=false&timestamp=1684840633148&version=1.0.0, urls: [dubbo://172.21.240.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-setting&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=11876&protocol=dubbo&release=2.7.13&revision=2.2.7.RELEASE&service.name=ServiceBean:yanhuohui-setting/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=provider&timestamp=1684895489099&version=1.0.0], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:31:35,046 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][DefaultMigrationAddressComparator.java:37] -  [DUBBO] No instance address available, will not migrate., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:03,933 WARN [Thread-6][NotifyCenter.java:136] - [NotifyCenter] Start destroying Publisher
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:03,935 WARN [Thread-2][HttpClientBeanHolder.java:108] - [HttpClientBeanHolder] Start destroying common HttpClient
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:03,936 WARN [Thread-6][NotifyCenter.java:153] - [NotifyCenter] Destruction of the end
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:03,970 WARN [Thread-2][HttpClientBeanHolder.java:114] - [HttpClientBeanHolder] Destruction of the end
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:12,215 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:12,232 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.13) : https://github.com/apache/dubbo-spring-boot-project
 :: Dubbo (v2.7.13) : https://github.com/apache/dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:12,239 INFO [main][OverrideDubboConfigApplicationListener.java:69] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=yanhuohui-goods, dubbo.application.qos-enable=false, dubbo.config.multiple=true}
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:12,857 INFO [pool-2-thread-1][AwaitingNonWebApplicationListener.java:159] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:13,391 INFO [main][OverrideDubboConfigApplicationListener.java:69] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=yanhuohui-goods, dubbo.application.qos-enable=false, dubbo.config.multiple=true}
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:13,545 INFO [main][Reflections.java:232] - Reflections took 57 ms to scan 1 urls, producing 3 keys and 6 values 
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:13,583 INFO [main][Reflections.java:232] - Reflections took 18 ms to scan 1 urls, producing 4 keys and 9 values 
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:13,597 INFO [main][Reflections.java:232] - Reflections took 12 ms to scan 1 urls, producing 3 keys and 10 values 
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:13,755 INFO [main][Reflections.java:232] - Reflections took 154 ms to scan 181 urls, producing 0 keys and 0 values 
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:13,777 INFO [main][Reflections.java:232] - Reflections took 21 ms to scan 1 urls, producing 1 keys and 5 values 
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:13,790 INFO [main][Reflections.java:232] - Reflections took 10 ms to scan 1 urls, producing 1 keys and 7 values 
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:13,801 INFO [main][Reflections.java:232] - Reflections took 9 ms to scan 1 urls, producing 2 keys and 8 values 
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:13,897 INFO [main][Reflections.java:232] - Reflections took 93 ms to scan 181 urls, producing 0 keys and 0 values 
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:15,942 WARN [main][NacosPropertySourceBuilder.java:87] - Ignore the empty nacos configuration and get it based on dataId[spring-boot-starter-druid.yaml] & group[common]
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:15,962 WARN [main][NacosPropertySourceBuilder.java:87] - Ignore the empty nacos configuration and get it based on dataId[spring-boot-mybatis-plus.yaml] & group[common]
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:15,980 WARN [main][NacosPropertySourceBuilder.java:87] - Ignore the empty nacos configuration and get it based on dataId[yanhuohui-goods] & group[goods]
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:16,007 INFO [main][PropertySourceBootstrapConfiguration.java:112] - Located property source: [BootstrapPropertySource {name='bootstrapProperties-yanhuohui-goods.yaml,goods'}, BootstrapPropertySource {name='bootstrapProperties-yanhuohui-goods,goods'}, BootstrapPropertySource {name='bootstrapProperties-spring-boot-mybatis-plus.yaml,common'}, BootstrapPropertySource {name='bootstrapProperties-spring-boot-starter-druid.yaml,common'}, BootstrapPropertySource {name='bootstrapProperties-yanhuohui-spring-boot-http.yaml,common'}]
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:16,034 INFO [main][SpringApplication.java:651] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:16,671 INFO [main][BeanRegistrar.java:67] - The Infrastructure bean definition [Root bean: class [org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=nullwith name [referenceAnnotationBeanPostProcessor] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:16,671 INFO [main][BeanRegistrar.java:67] - The Infrastructure bean definition [Root bean: class [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigAliasPostProcessor]; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=nullwith name [dubboConfigAliasPostProcessor] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:16,673 INFO [main][BeanRegistrar.java:67] - The Infrastructure bean definition [Root bean: class [org.apache.dubbo.config.spring.context.DubboApplicationListenerRegistrar]; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=nullwith name [dubboApplicationListenerRegister] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:16,675 INFO [main][BeanRegistrar.java:67] - The Infrastructure bean definition [Root bean: class [org.apache.dubbo.config.spring.beans.factory.config.DubboConfigDefaultPropertyValueBeanPostProcessor]; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=nullwith name [dubboConfigDefaultPropertyValueBeanPostProcessor] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:16,675 INFO [main][BeanRegistrar.java:67] - The Infrastructure bean definition [Root bean: class [org.apache.dubbo.config.spring.beans.factory.config.DubboConfigEarlyInitializationPostProcessor]; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=nullwith name [dubboConfigEarlyInitializationPostProcessor] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,190 WARN [main][EndpointId.java:155] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,236 INFO [main][ConfigurationBeanBindingRegistrar.java:139] - The configuration bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, content : Root bean: class [org.apache.dubbo.config.ApplicationConfig]; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,236 INFO [main][BeanRegistrar.java:67] - The Infrastructure bean definition [Root bean: class [com.alibaba.spring.beans.factory.annotation.ConfigurationBeanBindingPostProcessor]; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=nullwith name [configurationBeanBindingPostProcessor] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,236 INFO [main][ConfigurationBeanBindingRegistrar.java:139] - The configuration bean definition [name : org.apache.dubbo.config.RegistryConfig#0, content : Root bean: class [org.apache.dubbo.config.RegistryConfig]; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,236 INFO [main][ConfigurationBeanBindingRegistrar.java:139] - The configuration bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, content : Root bean: class [org.apache.dubbo.config.ProtocolConfig]; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,245 INFO [main][DubboConfigEarlyInitializationPostProcessor.java:102] - BeanFactory is about to be initialized, trying to resolve the Dubbo Config Beans early initialization
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,320 WARN [main][Logger.java:44] - Skipping MapperFactoryBean with name 'goodsInfoMapper' and 'com.chenyi.yanhuohui.goods.mapper.GoodsInfoMapper' mapperInterface. Bean already defined with the same name!
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,321 INFO [main][BeanRegistrar.java:67] - The Infrastructure bean definition [Root bean: class [org.apache.dubbo.config.spring.context.DubboBootstrapApplicationListener]; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=nullwith name [dubboBootstrapApplicationListener] has been registered.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,716 INFO [main][ServiceClassPostProcessor.java:223] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,717 INFO [main][ServiceClassPostProcessor.java:225] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,727 INFO [main][ServiceClassPostProcessor.java:312] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.chenyi.yanhuohui.goods.api.MerchantService, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,728 INFO [main][ServiceClassPostProcessor.java:312] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.chenyi.yanhuohui.goods.api.TestServiceApi, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,728 INFO [main][ServiceClassPostProcessor.java:180] -  [DUBBO] 2 annotated Dubbo's @Service Components { [Bean definition with name 'merchantServiceImpl': Generic bean: class [com.chenyi.yanhuohui.goods.service.MerchantServiceImpl]; scope=singleton; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\yanhuohui\yanhuohui-goods\yanhuohui-goods-core\target\classes\com\chenyi\yanhuohui\goods\service\MerchantServiceImpl.class], Bean definition with name 'testService': Generic bean: class [com.chenyi.yanhuohui.goods.service.TestService]; scope=singleton; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\yanhuohui\yanhuohui-goods\yanhuohui-goods-core\target\classes\com\chenyi\yanhuohui\goods\service\TestService.class]] } were scanned under package[com.chenyi.yanhuohui.goods], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,734 WARN [main][Logger.java:44] - Skipping MapperFactoryBean with name 'goodsInfoMapper' and 'com.chenyi.yanhuohui.goods.mapper.GoodsInfoMapper' mapperInterface. Bean already defined with the same name!
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,734 WARN [main][Logger.java:44] - Skipping MapperFactoryBean with name 'merchantMapper' and 'com.chenyi.yanhuohui.goods.mapper.MerchantMapper' mapperInterface. Bean already defined with the same name!
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,734 WARN [main][Logger.java:44] - Skipping MapperFactoryBean with name 'userMapper' and 'com.chenyi.yanhuohui.goods.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,737 INFO [main][ConfigurationClassPostProcessor.java:403] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:17,826 INFO [main][GenericScope.java:295] - BeanFactory id=ed77dfcd-cb8f-3791-8655-a9e54cb8cabe
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,287 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,316 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,324 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,333 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,341 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,346 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.util.DubboMetadataUtils' of type [com.alibaba.cloud.dubbo.util.DubboMetadataUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,365 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,392 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' of type [org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration$$EnhancerBySpringCGLIB$$5d9445f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,411 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,416 INFO [main][ConfigurationBeanBindingPostProcessor.java:159] - The configuration bean [<dubbo:application name="yanhuohui-goods" hostname="LAPTOP-35AQRM9O" qosEnable="false" />] have been binding by the configuration properties [{qos‐enable=false, name=yanhuohui-goods, qos-enable=false}]
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,418 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,424 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,426 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,427 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,431 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'metadataServiceInstanceSelector' of type [com.alibaba.cloud.dubbo.metadata.repository.RandomServiceInstanceSelector] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,435 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,439 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,444 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,457 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,468 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,473 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,492 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.nacos.NacosServiceAutoConfiguration' of type [com.alibaba.cloud.nacos.NacosServiceAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,499 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosServiceManager' of type [com.alibaba.cloud.nacos.NacosServiceManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,872 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,877 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosServiceDiscovery' of type [com.alibaba.cloud.nacos.discovery.NacosServiceDiscovery] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,883 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,908 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:18,909 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,313 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,317 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,321 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,324 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,329 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,358 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,369 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,376 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,382 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,390 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,393 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,397 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,400 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,406 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,413 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,418 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,423 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,436 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,441 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,457 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,464 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,502 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,520 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,533 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,540 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,549 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,563 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,564 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,591 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat' of type [org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,674 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration' of type [org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,682 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'websocketServletWebServerCustomizer' of type [org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,689 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,696 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'servletWebServerFactoryCustomizer' of type [org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,702 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'tomcatServletWebServerFactoryCustomizer' of type [org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,705 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,712 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'tomcatWebServerFactoryCustomizer' of type [org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,716 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,721 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'localeCharsetMappingsCustomizer' of type [org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,791 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,795 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,800 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,813 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' of type [org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,855 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'dispatcherServlet' of type [org.springframework.web.servlet.DispatcherServlet] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,869 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties' of type [org.springframework.boot.autoconfigure.web.servlet.MultipartProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,873 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,878 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'multipartConfigElement' of type [javax.servlet.MultipartConfigElement] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,889 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'dispatcherServletRegistration' of type [org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,897 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'errorPageCustomizer' of type [org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:19,898 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'tomcatServletWebServerFactory' of type [org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,160 INFO [main][TomcatWebServer.java:91] - Tomcat initialized with port(s): 8090 (http)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,182 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-8090"]
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,184 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,185 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.37]
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,189 INFO [main][DirectJDKLog.java:173] - Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,190 INFO [main][DirectJDKLog.java:173] - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,190 INFO [main][DirectJDKLog.java:173] - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,197 INFO [main][DirectJDKLog.java:173] - OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,418 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,419 INFO [main][ServletWebServerApplicationContext.java:283] - Root WebApplicationContext: initialization completed in 4362 ms
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,439 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' of type [org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,444 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,449 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,461 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'management.metrics.export.simple-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties' of type [org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,478 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'simpleConfig' of type [org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,489 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,497 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'micrometerClock' of type [io.micrometer.core.instrument.Clock$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,528 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'simpleMeterRegistry' of type [io.micrometer.core.instrument.simple.SimpleMeterRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,541 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'propertiesMeterFilter' of type [org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,546 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,555 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'metricsHttpClientUriTagFilter' of type [io.micrometer.core.instrument.config.MeterFilter$9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,558 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'metricsHttpServerUriTagFilter' of type [io.micrometer.core.instrument.config.MeterFilter$9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,564 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,575 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'jvmGcMetrics' of type [io.micrometer.core.instrument.binder.jvm.JvmGcMetrics] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,581 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'jvmMemoryMetrics' of type [io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,587 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'jvmThreadMetrics' of type [io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,593 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'classLoaderMetrics' of type [io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,597 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.Log4J2MetricsAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.Log4J2MetricsAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,601 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'log4j2Metrics' of type [io.micrometer.core.instrument.binder.logging.Log4j2Metrics] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,605 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,611 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'uptimeMetrics' of type [io.micrometer.core.instrument.binder.system.UptimeMetrics] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,617 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'processorMetrics' of type [io.micrometer.core.instrument.binder.system.ProcessorMetrics] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,623 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'fileDescriptorMetrics' of type [io.micrometer.core.instrument.binder.system.FileDescriptorMetrics] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,683 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'webMvcTagsProvider' of type [org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,708 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'webMvcMetricsFilter' of type [org.springframework.boot.web.servlet.FilterRegistrationBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,714 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration' of type [org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,725 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' of type [org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,731 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration' of type [org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,744 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,751 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'webEndpointPathMapper' of type [org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,757 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration' of type [org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,763 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'servletExposeExcludePropertyEndpointFilter' of type [org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,777 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'servletEndpointDiscoverer' of type [org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,798 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'servletEndpointRegistrar' of type [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,828 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'requestContextFilter' of type [org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,833 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,852 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'formContentFilter' of type [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,878 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'characterEncodingFilter' of type [org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:20,980 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration' of type [org.springframework.cloud.autoconfigure.RefreshAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:21,003 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'contextRefresher' of type [org.springframework.cloud.context.refresh.ContextRefresher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:21,017 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'refreshEventListener' of type [org.springframework.cloud.endpoint.event.RefreshEventListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:21,083 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'goodsServiceApplication' of type [com.chenyi.yanhuohui.goods.GoodsServiceApplication$$EnhancerBySpringCGLIB$$7b90fd6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:21,106 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'mybatisPlusConfig' of type [com.chenyi.yanhuohui.goods.configuration.MybatisPlusConfig$$EnhancerBySpringCGLIB$$3e3e2c95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:21,455 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceRegistrationAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceRegistrationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:21,469 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'defaultSpringCloudRegistryConfig' of type [org.apache.dubbo.config.RegistryConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:21,474 INFO [main][ConfigurationBeanBindingPostProcessor.java:159] - The configuration bean [<dubbo:registry address="nacos://175.24.186.119:8848" protocol="nacos" port="8848" />] have been binding by the configuration properties [{address=nacos://175.24.186.119:8848}]
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:21,475 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.apache.dubbo.config.RegistryConfig#0' of type [org.apache.dubbo.config.RegistryConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:21,488 INFO [main][ConfigurationBeanBindingPostProcessor.java:159] - The configuration bean [ProtocolConfig{name='dubbo', host='null', port=-1, contextpath='null', threadpool='null', threadname='null', corethreads=null, threads=null, iothreads=null, alive=null, queues=null, accepts=null, codec='null', serialization='null', charset='null', payload=null, buffer=null, heartbeat=null, accesslog='null', transporter='null', exchanger='null', dispatcher='null', networker='null', server='null', client='null', telnet='null', prompt='null', status='null', register=null, keepAlive=null, optimizer='null', extension='null', parameters=null, isDefault=null, sslEnabled=null}] have been binding by the configuration properties [{name=dubbo, port=-1}]
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:21,489 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.apache.dubbo.config.ProtocolConfig#0' of type [org.apache.dubbo.config.ProtocolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:21,495 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean '@Reference com.chenyi.yanhuohui.goods.api.MerchantService' of type [org.apache.dubbo.config.spring.ReferenceBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:21,501 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:85] - The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:22,297 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:22,315 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:22,327 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$dcae645c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:22,332 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:22,349 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:22,397 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:22,409 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:22,436 INFO [main][HikariDataSource.java:110] - HikariPool-1 - Starting...
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:23,434 INFO [main][HikariDataSource.java:123] - HikariPool-1 - Start completed.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:23,698 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:23,715 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:23,753 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'merchantMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:23,757 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'merchantMapper' of type [com.sun.proxy.$Proxy142] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:23,763 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'merchantServiceImpl' of type [com.chenyi.yanhuohui.goods.service.MerchantServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:23,766 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'ServiceBean:com.chenyi.yanhuohui.goods.api.MerchantService' of type [org.apache.dubbo.config.spring.ServiceBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:23,788 INFO [main][DubboBootstrap.java:756] -  [DUBBO] No value is configured in the registry, the DynamicConfigurationFactory extension[name : nacos] supports as the config center, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:23,788 INFO [main][DubboBootstrap.java:762] -  [DUBBO] The registry[<dubbo:registry address="nacos://175.24.186.119:8848" protocol="nacos" port="8848" />] will be used as the config center, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:23,793 INFO [main][DubboBootstrap.java:756] -  [DUBBO] No value is configured in the registry, the DynamicConfigurationFactory extension[name : spring-cloud] does not support as the config center, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:23,794 INFO [main][DubboBootstrap.java:762] -  [DUBBO] The registry[<dubbo:registry address="localhost" protocol="spring-cloud" port="0" />] will be not used as the config center, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:24,013 INFO [main][DubboBootstrap.java:1039] -  [DUBBO] No global configuration in config center, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:24,013 INFO [main][DubboBootstrap.java:1045] -  [DUBBO] No application level configuration in config center, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:24,074 INFO [main][ConfigValidationUtils.java:471] -  [DUBBO] No valid monitor config found, specify monitor info to enable collection of Dubbo statistics, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:24,097 INFO [main][DubboBootstrap.java:756] -  [DUBBO] No value is configured in the registry, the MetadataReportFactory extension[name : nacos] supports as the metadata center, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:24,098 INFO [main][DubboBootstrap.java:762] -  [DUBBO] The registry[<dubbo:registry address="nacos://175.24.186.119:8848" protocol="nacos" port="8848" />] will be used as the metadata center, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:24,101 INFO [main][DubboBootstrap.java:756] -  [DUBBO] No value is configured in the registry, the MetadataReportFactory extension[name : spring-cloud] does not support as the metadata center, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:24,101 INFO [main][DubboBootstrap.java:762] -  [DUBBO] The registry[<dubbo:registry address="localhost" protocol="spring-cloud" port="0" />] will be not used as the metadata center, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:24,130 INFO [main][AbstractMetadataReport.java:198] -  [DUBBO] Load service store file C:\Users\陈义\.dubbo\dubbo-metadata-yanhuohui-goods-175.24.186.119-8848.cache, data: {com.chenyi.yanhuohui.setting.api.GoodsInfoService:::consumer:yanhuohui-goods={"init":"false","side":"consumer","metadata-type":"remote","application":"yanhuohui-goods","release":"2.7.13","methods":"fetchGoodsInfoDetail","sticky":"false","dubbo":"2.0.2","interface":"com.chenyi.yanhuohui.setting.api.GoodsInfoService","qos.enable":"false","revision":"1.0-SNAPSHOT"}, com.chenyi.yanhuohui.goods.api.TestServiceApi:::provider:yanhuohui-goods={"annotations":[],"canonicalName":"com.chenyi.yanhuohui.goods.api.TestServiceApi","codeSource":"file:/D:/yanhuohui/yanhuohui-goods/yanhuohui-goods-api/target/classes/","methods":[{"annotations":[],"name":"hello","parameterTypes":[],"parameters":[],"returnType":"void"}],"parameters":{"side":"provider","service.name":"ServiceBean:/com.chenyi.yanhuohui.goods.api.TestServiceApi","release":"2.7.13","methods":"hello","deprecated":"false","dubbo":"2.0.2","interface":"com.chenyi.yanhuohui.goods.api.TestServiceApi","qos.enable":"false","generic":"false","metadata-type":"remote","application":"yanhuohui-goods","dynamic":"true","anyhost":"true"},"types":[{"enums":[],"items":[],"properties":{},"type":"void","typeBuilderName":"org.apache.dubbo.metadata.definition.builder.DefaultTypeBuilder"}],"uniqueId":"com.chenyi.yanhuohui.goods.api.TestServiceApi@file:/D:/yanhuohui/yanhuohui-goods/yanhuohui-goods-api/target/classes/"}, com.chenyi.yanhuohui.goods.service.TestServiceApi:::provider:yanhuohui-goods={"annotations":[],"canonicalName":"com.chenyi.yanhuohui.goods.service.TestServiceApi","codeSource":"file:/D:/yanhuohui/yanhuohui-goods/yanhuohui-goods-core/target/classes/","methods":[{"annotations":[],"name":"hello","parameterTypes":[],"parameters":[],"returnType":"void"}],"parameters":{"side":"provider","service.name":"ServiceBean:/com.chenyi.yanhuohui.goods.service.TestServiceApi","release":"2.7.13","methods":"hello","deprecated":"false","dubbo":"2.0.2","interface":"com.chenyi.yanhuohui.goods.service.TestServiceApi","qos.enable":"false","generic":"false","metadata-type":"remote","application":"yanhuohui-goods","dynamic":"true","anyhost":"true"},"types":[{"enums":[],"items":[],"properties":{},"type":"void","typeBuilderName":"org.apache.dubbo.metadata.definition.builder.DefaultTypeBuilder"}],"uniqueId":"com.chenyi.yanhuohui.goods.service.TestServiceApi@file:/D:/yanhuohui/yanhuohui-goods/yanhuohui-goods-core/target/classes/"}, com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0:yanhuohui-setting:consumer:yanhuohui-goods={"side":"consumer","release":"2.7.13","dubbo":"2.0.2","check":"false","interface":"com.alibaba.cloud.dubbo.service.DubboMetadataService","version":"1.0.0","qos.enable":"false","generic":"true","router":"-default,revisionRouter","metadata-type":"remote","application":"yanhuohui-goods","sticky":"false","group":"yanhuohui-setting"}, com.chenyi.yanhuohui.goods.api.MerchantService:::consumer:yanhuohui-goods={"init":"false","side":"consumer","metadata-type":"remote","application":"yanhuohui-goods","release":"2.7.13","methods":"queryMerchantById","injvm":"true","sticky":"false","dubbo":"2.0.2","interface":"com.chenyi.yanhuohui.goods.api.MerchantService","qos.enable":"false"}, com.chenyi.yanhuohui.goods.api.MerchantService:::provider:yanhuohui-goods={"annotations":[],"canonicalName":"com.chenyi.yanhuohui.goods.api.MerchantService","codeSource":"file:/D:/yanhuohui/yanhuohui-goods/yanhuohui-goods-api/target/classes/","methods":[{"annotations":[],"name":"queryMerchantById","parameterTypes":["java.lang.Long"],"parameters":[],"returnType":"com.chenyi.yanhuohui.goods.dto.MerchantDTO"}],"parameters":{"side":"provider","service.name":"ServiceBean:/com.chenyi.yanhuohui.goods.api.MerchantService","release":"2.7.13","methods":"queryMerchantById","deprecated":"false","dubbo":"2.0.2","interface":"com.chenyi.yanhuohui.goods.api.MerchantService","qos.enable":"false","generic":"false","metadata-type":"remote","application":"yanhuohui-goods","dynamic":"true","anyhost":"true"},"types":[{"enums":[],"items":[],"properties":{},"type":"java.lang.String","typeBuilderName":"org.apache.dubbo.metadata.definition.builder.DefaultTypeBuilder"},{"enums":[],"items":[],"properties":{},"type":"java.lang.Long","typeBuilderName":"org.apache.dubbo.metadata.definition.builder.DefaultTypeBuilder"},{"enums":[],"items":[],"properties":{"idCardFrontImg":{"$ref":"$.types[0]"},"idCardAfterImg":{"$ref":"$.types[0]"},"mobile":{"$ref":"$.types[0]"},"businessLicensesImg":{"$ref":"$.types[0]"},"merchantName":{"$ref":"$.types[0]"},"password":{"$ref":"$.types[0]"},"tenantId":{"$ref":"$.types[1]"},"merchantAddress":{"$ref":"$.types[0]"},"contactsAddress":{"$ref":"$.types[0]"},"auditStatus":{"$ref":"$.types[0]"},"id":{"$ref":"$.types[1]"},"merchantType":{"$ref":"$.types[0]"},"merchantNo":{"$ref":"$.types[1]"},"username":{"$ref":"$.types[0]"}},"type":"com.chenyi.yanhuohui.goods.dto.MerchantDTO","typeBuilderName":"org.apache.dubbo.metadata.definition.builder.DefaultTypeBuilder"}],"uniqueId":"com.chenyi.yanhuohui.goods.api.MerchantService@file:/D:/yanhuohui/yanhuohui-goods/yanhuohui-goods-api/target/classes/"}, com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0:yanhuohui-goods:provider:yanhuohui-goods={"annotations":[],"canonicalName":"com.alibaba.cloud.dubbo.service.DubboMetadataService","codeSource":"spring-cloud-starter-dubbo-2.2.7.RELEASE.jar","methods":[{"annotations":[],"name":"getExportedURLs","parameterTypes":["java.lang.String","java.lang.String","java.lang.String"],"parameters":[],"returnType":"java.lang.String"},{"annotations":[],"name":"getAllExportedURLs","parameterTypes":[],"parameters":[],"returnType":"java.util.Map<java.lang.String,java.lang.String>"},{"annotations":[],"name":"getServiceRestMetadata","parameterTypes":[],"parameters":[],"returnType":"java.lang.String"},{"annotations":[],"name":"getAllServiceKeys","parameterTypes":[],"parameters":[],"returnType":"java.util.Set<java.lang.String>"}],"parameters":{"side":"provider","service.name":"ServiceBean:yanhuohui-goods/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0","release":"2.7.13","methods":"getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs","deprecated":"false","dubbo":"2.0.2","interface":"com.alibaba.cloud.dubbo.service.DubboMetadataService","version":"1.0.0","qos.enable":"false","generic":"false","revision":"2.2.7.RELEASE","metadata-type":"remote","application":"yanhuohui-goods","dynamic":"true","group":"yanhuohui-goods","anyhost":"true"},"types":[{"enums":[],"items":[],"properties":{},"type":"java.lang.String","typeBuilderName":"org.apache.dubbo.metadata.definition.builder.DefaultTypeBuilder"}],"uniqueId":"com.alibaba.cloud.dubbo.service.DubboMetadataService@spring-cloud-starter-dubbo-2.2.7.RELEASE.jar"}}, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:24,205 INFO [main][DubboBootstrap.java:533] -  [DUBBO] DubboBootstrap has been initialized!, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:24,270 INFO [main][ServiceConfig.java:600] -  [DUBBO] No valid ip found from environment, try to find valid host from DNS., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:24,283 WARN [main][ServiceConfig.java:745] -  [DUBBO] Use random available port(20881) for protocol dubbo, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:24,378 INFO [main][ServiceConfig.java:557] -  [DUBBO] Export dubbo service com.chenyi.yanhuohui.goods.api.MerchantService to local registry url : injvm://127.0.0.1/com.chenyi.yanhuohui.goods.api.MerchantService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.MerchantService&metadata-type=remote&methods=queryMerchantById&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.MerchantService&side=provider&timestamp=1684895544226, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:24,379 INFO [main][ServiceConfig.java:507] -  [DUBBO] Register dubbo service com.chenyi.yanhuohui.goods.api.MerchantService url dubbo://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.MerchantService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.MerchantService&metadata-type=remote&methods=queryMerchantById&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.MerchantService&side=provider&timestamp=1684895544226 to registry registry://175.24.186.119:8848/org.apache.dubbo.registry.RegistryService?application=yanhuohui-goods&dubbo=2.0.2&id=org.apache.dubbo.config.RegistryConfig#0&pid=8280&qos.enable=false&registry=nacos&release=2.7.13&timestamp=1684895544223, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:24,448 INFO [main][QosProtocolWrapper.java:97] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:25,238 INFO [main][AbstractServer.java:69] -  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /172.21.240.1:20881, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:25,544 INFO [main][AbstractRegistry.java:220] -  [DUBBO] Load registry cache file C:\Users\陈义\.dubbo\dubbo-registry-yanhuohui-goods-175.24.186.119-8848.cache, data: {yanhuohui-setting/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://172.21.240.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-setting&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=11876&protocol=dubbo&release=2.7.13&revision=2.2.7.RELEASE&service.name=ServiceBean:yanhuohui-setting/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=provider&timestamp=1684895489099&version=1.0.0, com.chenyi.yanhuohui.setting.api.GoodsInfoService=dubbo://172.21.240.1:20880/com.chenyi.yanhuohui.setting.api.GoodsInfoService?anyhost=true&application=yanhuohui-setting&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&path=com.chenyi.yanhuohui.setting.api.GoodsInfoService&pid=11876&protocol=dubbo&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.setting.api.GoodsInfoService&side=provider&timestamp=1684895486966}, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:25,547 INFO [main][AbstractRegistry.java:288] -  [DUBBO] Register: dubbo://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.MerchantService?anyhost=true&application=yanhuohui-goods&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.MerchantService&metadata-type=remote&methods=queryMerchantById&pid=8280&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.MerchantService&side=provider&timestamp=1684895544226, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:25,575 INFO [main][AbstractRegistry.java:313] -  [DUBBO] Subscribe: provider://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.MerchantService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.MerchantService&metadata-type=remote&methods=queryMerchantById&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.MerchantService&side=provider&timestamp=1684895544226, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:25,607 INFO [main][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url provider://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.MerchantService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.MerchantService&metadata-type=remote&methods=queryMerchantById&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.MerchantService&side=provider&timestamp=1684895544226, urls: [empty://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.MerchantService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.MerchantService&metadata-type=remote&methods=queryMerchantById&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.MerchantService&side=provider&timestamp=1684895544226], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:25,615 INFO [main][MigrationRuleListener.java:56] -  [DUBBO] Listening for migration rules on dataId-yanhuohui-goods.migration group-MIGRATION, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:25,632 INFO [main][MigrationRuleListener.java:83] -  [DUBBO] Using the following migration rule to migrate:, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:25,632 INFO [main][MigrationRuleListener.java:84] -  [DUBBO] INIT, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:25,633 INFO [main][ServiceConfig.java:507] -  [DUBBO] Register dubbo service com.chenyi.yanhuohui.goods.api.MerchantService url dubbo://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.MerchantService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.MerchantService&metadata-type=remote&methods=queryMerchantById&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.MerchantService&side=provider&timestamp=1684895544226 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=yanhuohui-goods&dubbo=2.0.2&id=defaultSpringCloudRegistryConfig&pid=8280&qos.enable=false&registry=spring-cloud&release=2.7.13&timestamp=1684895544225, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:25,661 INFO [main][AbstractRegistry.java:288] -  [DUBBO] Register: dubbo://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.MerchantService?anyhost=true&application=yanhuohui-goods&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.MerchantService&metadata-type=remote&methods=queryMerchantById&pid=8280&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.MerchantService&side=provider&timestamp=1684895544226, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,112 INFO [main][DubboMetadataServiceProxy.java:187] - The metadata of Dubbo service[name : yanhuohui-setting] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,188 WARN [main][InterfaceCompatibleRegistryProtocol.java:72] -  [DUBBO] spring-cloud do not support service discovery, automatically switch to interface-level service discovery., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,240 INFO [main][AbstractRegistry.java:288] -  [DUBBO] Register: consumer://172.21.240.1/org.apache.dubbo.rpc.service.GenericService?application=yanhuohui-goods&category=consumers&check=false&dubbo=2.0.2&generic=true&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&pid=8280&qos.enable=false&release=2.7.13&router=-default,revisionRouter&side=consumer&sticky=false&timestamp=1684895546121&version=1.0.0, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,270 INFO [main][AbstractRegistry.java:313] -  [DUBBO] Subscribe: consumer://172.21.240.1/org.apache.dubbo.rpc.service.GenericService?application=yanhuohui-goods&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&pid=8280&qos.enable=false&release=2.7.13&router=-default,revisionRouter&side=consumer&sticky=false&timestamp=1684895546121&version=1.0.0, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,334 INFO [NettyClientWorker-4-1][NettyClientHandler.java:62] -  [DUBBO] The connection of /172.21.240.1:61105 -> /172.21.240.1:20880 is established., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,341 INFO [main][AbstractClient.java:207] -  [DUBBO] Successed connect to server /172.21.240.1:20880 from NettyClient 172.21.240.1 using dubbo version 2.7.13, channel is NettyChannel [channel=[id: 0x388b83f1, L:/172.21.240.1:61105 - R:/172.21.240.1:20880]], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,341 INFO [main][AbstractClient.java:75] -  [DUBBO] Start NettyClient /172.21.240.1 connect to the server /172.21.240.1:20880, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,358 INFO [main][DefaultMigrationAddressComparator.java:37] -  [DUBBO] No instance address available, will not migrate., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,382 INFO [main][LoggingEventListener.java:82] -  [DUBBO] org.apache.dubbo.registry.nacos.NacosServiceDiscovery@288e50c1 is initializing..., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,568 INFO [main][LoggingEventListener.java:82] -  [DUBBO] org.apache.dubbo.registry.nacos.NacosServiceDiscovery@288e50c1 is initialized., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,637 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url provider://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.MerchantService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.MerchantService&metadata-type=remote&methods=queryMerchantById&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.MerchantService&side=provider&timestamp=1684895544226, urls: [empty://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.MerchantService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.MerchantService&metadata-type=remote&methods=queryMerchantById&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.MerchantService&side=provider&timestamp=1684895544226], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,711 INFO [main][ServiceDiscoveryRegistry.java:383] -  [DUBBO] com.alibaba.cloud.dubbo.service.DubboMetadataService mapping to null instructed by remote metadata center., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,711 INFO [main][ServiceDiscoveryRegistry.java:386] -  [DUBBO] com.alibaba.cloud.dubbo.service.DubboMetadataService mapping to null by default., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,711 WARN [main][ServiceDiscoveryRegistry.java:265] -  [DUBBO] Should has at least one way to know which services this interface belongs to, subscription url: consumer://172.21.240.1/org.apache.dubbo.rpc.service.GenericService?REGISTRY_CLUSTER=org.apache.dubbo.config.RegistryConfig#0&application=yanhuohui-goods&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&pid=8280&qos.enable=false&release=2.7.13&router=-default,revisionRouter&side=consumer&sticky=false&timestamp=1684895546121&version=1.0.0, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,712 INFO [main][AbstractRegistry.java:288] -  [DUBBO] Register: consumer://172.21.240.1/org.apache.dubbo.rpc.service.GenericService?application=yanhuohui-goods&category=consumers&check=false&dubbo=2.0.2&generic=true&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&pid=8280&qos.enable=false&release=2.7.13&router=-default,revisionRouter&side=consumer&sticky=false&timestamp=1684895546121&version=1.0.0, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,745 INFO [main][AbstractRegistry.java:313] -  [DUBBO] Subscribe: consumer://172.21.240.1/org.apache.dubbo.rpc.service.GenericService?application=yanhuohui-goods&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&pid=8280&qos.enable=false&release=2.7.13&router=-default,revisionRouter&side=consumer&sticky=false&timestamp=1684895546121&version=1.0.0, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,745 INFO [main][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url consumer://172.21.240.1/org.apache.dubbo.rpc.service.GenericService?application=yanhuohui-goods&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&pid=8280&qos.enable=false&release=2.7.13&router=-default,revisionRouter&side=consumer&sticky=false&timestamp=1684895546121&version=1.0.0, urls: [dubbo://172.21.240.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-setting&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=11876&protocol=dubbo&release=2.7.13&revision=2.2.7.RELEASE&service.name=ServiceBean:yanhuohui-setting/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=provider&timestamp=1684895489099&version=1.0.0], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,748 INFO [main][DefaultMigrationAddressComparator.java:37] -  [DUBBO] No instance address available, will not migrate., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,759 INFO [main][ReferenceConfig.java:409] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url dubbo://175.24.186.119:8848/com.alibaba.cloud.dubbo.service.DubboMetadataService?application=yanhuohui-goods&check=false&dubbo=2.0.2&generic=true&group=yanhuohui-setting&id=org.apache.dubbo.config.RegistryConfig#0&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&pid=8280&qos.enable=false&register.ip=172.21.240.1&registry=nacos&release=2.7.13&router=-default,revisionRouter&side=consumer&sticky=false&timestamp=1684895546121&version=1.0.0, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:26,764 INFO [DubboSaveMetadataReport-thread-1][AbstractMetadataReport.java:287] -  [DUBBO] store consumer metadata. Identifier : org.apache.dubbo.metadata.report.identifier.MetadataIdentifier@dd33915; definition: {side=consumer, release=2.7.13, dubbo=2.0.2, check=false, interface=com.alibaba.cloud.dubbo.service.DubboMetadataService, version=1.0.0, qos.enable=false, generic=true, router=-default,revisionRouter, metadata-type=remote, application=yanhuohui-goods, sticky=false, group=yanhuohui-setting}, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,409 WARN [main][DubboServiceMetadataRepository.java:476] - The Spring application[name : yanhuohui-setting] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,409 INFO [main][DubboServiceMetadataRepository.java:253] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,409 INFO [main][DubboCloudRegistry.java:156] - DubboCloudRegistry preInit Done.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,744 INFO [main][AbstractRegistry.java:313] -  [DUBBO] Subscribe: provider://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.MerchantService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.MerchantService&metadata-type=remote&methods=queryMerchantById&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.MerchantService&side=provider&timestamp=1684895544226, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,803 INFO [DubboSaveMetadataReport-thread-1][AbstractMetadataReport.java:259] -  [DUBBO] store provider metadata. Identifier : org.apache.dubbo.metadata.report.identifier.MetadataIdentifier@7b476077; definition: FullServiceDefinition{parameters={side=provider, service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.MerchantService, release=2.7.13, methods=queryMerchantById, deprecated=false, dubbo=2.0.2, interface=com.chenyi.yanhuohui.goods.api.MerchantService, qos.enable=false, generic=false, metadata-type=remote, application=yanhuohui-goods, dynamic=true, anyhost=true}} ServiceDefinition [canonicalName=com.chenyi.yanhuohui.goods.api.MerchantService, codeSource=file:/D:/yanhuohui/yanhuohui-goods/yanhuohui-goods-api/target/classes/, methods=[MethodDefinition [name=queryMerchantById, parameterTypes=[java.lang.Long], returnType=com.chenyi.yanhuohui.goods.dto.MerchantDTO]]], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,830 INFO [main][ReferenceConfig.java:335] -  [DUBBO] Using injvm service com.chenyi.yanhuohui.goods.api.MerchantService, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,830 INFO [main][ReferenceConfig.java:409] -  [DUBBO] Refer dubbo service com.chenyi.yanhuohui.goods.api.MerchantService from url injvm://127.0.0.1/com.chenyi.yanhuohui.goods.api.MerchantService?application=yanhuohui-goods&dubbo=2.0.2&init=false&injvm=true&interface=com.chenyi.yanhuohui.goods.api.MerchantService&metadata-type=remote&methods=queryMerchantById&pid=8280&qos.enable=false&register.ip=172.21.240.1&release=2.7.13&side=consumer&sticky=false&timestamp=1684895547816, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,832 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean '@Reference com.chenyi.yanhuohui.goods.api.MerchantService' of type [org.apache.dubbo.common.bytecode.proxy1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,842 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean '@Reference com.chenyi.yanhuohui.setting.api.GoodsInfoService' of type [org.apache.dubbo.config.spring.ReferenceBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,843 INFO [DubboSaveMetadataReport-thread-1][AbstractMetadataReport.java:287] -  [DUBBO] store consumer metadata. Identifier : org.apache.dubbo.metadata.report.identifier.MetadataIdentifier@58f3fad0; definition: {init=false, side=consumer, metadata-type=remote, application=yanhuohui-goods, release=2.7.13, methods=queryMerchantById, injvm=true, sticky=false, dubbo=2.0.2, interface=com.chenyi.yanhuohui.goods.api.MerchantService, qos.enable=false}, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,844 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:85] - The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,961 INFO [main][ServiceDiscoveryRegistry.java:383] -  [DUBBO] com.chenyi.yanhuohui.setting.api.GoodsInfoService mapping to null instructed by remote metadata center., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,961 INFO [main][ServiceDiscoveryRegistry.java:386] -  [DUBBO] com.chenyi.yanhuohui.setting.api.GoodsInfoService mapping to null by default., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,962 WARN [main][ServiceDiscoveryRegistry.java:265] -  [DUBBO] Should has at least one way to know which services this interface belongs to, subscription url: consumer://172.21.240.1/com.chenyi.yanhuohui.setting.api.GoodsInfoService?REGISTRY_CLUSTER=org.apache.dubbo.config.RegistryConfig#0&application=yanhuohui-goods&category=providers,configurators,routers&dubbo=2.0.2&init=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&pid=8280&qos.enable=false&release=2.7.13&revision=1.0-SNAPSHOT&side=consumer&sticky=false&timestamp=1684895547845, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:27,962 INFO [main][AbstractRegistry.java:288] -  [DUBBO] Register: consumer://172.21.240.1/com.chenyi.yanhuohui.setting.api.GoodsInfoService?application=yanhuohui-goods&category=consumers&check=false&dubbo=2.0.2&init=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&pid=8280&qos.enable=false&release=2.7.13&revision=1.0-SNAPSHOT&side=consumer&sticky=false&timestamp=1684895547845, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,000 INFO [main][AbstractRegistry.java:313] -  [DUBBO] Subscribe: consumer://172.21.240.1/com.chenyi.yanhuohui.setting.api.GoodsInfoService?application=yanhuohui-goods&category=providers,configurators,routers&dubbo=2.0.2&init=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&pid=8280&qos.enable=false&release=2.7.13&revision=1.0-SNAPSHOT&side=consumer&sticky=false&timestamp=1684895547845, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,021 INFO [main][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url consumer://172.21.240.1/com.chenyi.yanhuohui.setting.api.GoodsInfoService?application=yanhuohui-goods&category=providers,configurators,routers&dubbo=2.0.2&init=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&pid=8280&qos.enable=false&release=2.7.13&revision=1.0-SNAPSHOT&side=consumer&sticky=false&timestamp=1684895547845, urls: [dubbo://172.21.240.1:20880/com.chenyi.yanhuohui.setting.api.GoodsInfoService?anyhost=true&application=yanhuohui-setting&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&path=com.chenyi.yanhuohui.setting.api.GoodsInfoService&pid=11876&protocol=dubbo&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.setting.api.GoodsInfoService&side=provider&timestamp=1684895486966], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,040 INFO [main][DefaultMigrationAddressComparator.java:37] -  [DUBBO] No instance address available, will not migrate., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,059 WARN [main][InterfaceCompatibleRegistryProtocol.java:72] -  [DUBBO] spring-cloud do not support service discovery, automatically switch to interface-level service discovery., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,060 INFO [main][AbstractRegistry.java:288] -  [DUBBO] Register: consumer://172.21.240.1/com.chenyi.yanhuohui.setting.api.GoodsInfoService?application=yanhuohui-goods&category=consumers&check=false&dubbo=2.0.2&init=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&pid=8280&qos.enable=false&release=2.7.13&revision=1.0-SNAPSHOT&side=consumer&sticky=false&timestamp=1684895547845, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,200 INFO [main][AbstractRegistry.java:313] -  [DUBBO] Subscribe: consumer://172.21.240.1/com.chenyi.yanhuohui.setting.api.GoodsInfoService?application=yanhuohui-goods&category=providers,configurators,routers&dubbo=2.0.2&init=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&pid=8280&qos.enable=false&release=2.7.13&revision=1.0-SNAPSHOT&side=consumer&sticky=false&timestamp=1684895547845, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,203 ERROR [main][DubboMetadataServiceInvocationHandler.java:53] - Failed to invoke the method $invoke in the service org.apache.dubbo.rpc.service.GenericService. No provider available for the service yanhuohui-setting/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0 from registry 175.24.186.119:8848 on the consumer 172.21.240.1 using the dubbo version 2.7.13. Please check if the providers have been started and registered.
org.apache.dubbo.rpc.RpcException: Failed to invoke the method $invoke in the service org.apache.dubbo.rpc.service.GenericService. No provider available for the service yanhuohui-setting/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0 from registry 175.24.186.119:8848 on the consumer 172.21.240.1 using the dubbo version 2.7.13. Please check if the providers have been started and registered.
	at org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.checkInvokers(AbstractClusterInvoker.java:288)
	at org.apache.dubbo.rpc.cluster.support.FailoverClusterInvoker.doInvoke(FailoverClusterInvoker.java:59)
	at org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:265)
	at org.apache.dubbo.rpc.cluster.interceptor.ClusterInterceptor.intercept(ClusterInterceptor.java:47)
	at org.apache.dubbo.rpc.cluster.support.wrapper.AbstractCluster$InterceptorInvokerNode.invoke(AbstractCluster.java:92)
	at org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:93)
	at org.apache.dubbo.registry.client.migration.MigrationInvoker.invoke(MigrationInvoker.java:170)
	at org.apache.dubbo.rpc.cluster.support.registry.ZoneAwareClusterInvoker.doInvoke(ZoneAwareClusterInvoker.java:103)
	at org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:265)
	at org.apache.dubbo.rpc.cluster.interceptor.ClusterInterceptor.intercept(ClusterInterceptor.java:47)
	at org.apache.dubbo.rpc.cluster.support.wrapper.AbstractCluster$InterceptorInvokerNode.invoke(AbstractCluster.java:92)
	at org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:96)
	at org.apache.dubbo.common.bytecode.proxy0.$invoke(proxy0.java)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceInvocationHandler.invoke(DubboMetadataServiceInvocationHandler.java:48)
	at com.sun.proxy.$Proxy148.getExportedURLs(Unknown Source)
	at com.alibaba.cloud.dubbo.registry.GenearalServiceSubscribeHandler.getExportedURLs(GenearalServiceSubscribeHandler.java:269)
	at com.alibaba.cloud.dubbo.registry.GenearalServiceSubscribeHandler.getTemplateExportedURLs(GenearalServiceSubscribeHandler.java:242)
	at com.alibaba.cloud.dubbo.registry.GenearalServiceSubscribeHandler.init(GenearalServiceSubscribeHandler.java:126)
	at com.alibaba.cloud.dubbo.registry.GenearalServiceSubscribeHandler.doInit(GenearalServiceSubscribeHandler.java:118)
	at com.alibaba.cloud.dubbo.registry.AbstractServiceSubscribeHandler.init(AbstractServiceSubscribeHandler.java:84)
	at com.alibaba.cloud.dubbo.registry.DubboCloudRegistry.doSubscribe(DubboCloudRegistry.java:231)
	at org.apache.dubbo.registry.support.FailbackRegistry.subscribe(FailbackRegistry.java:299)
	at org.apache.dubbo.registry.ListenerRegistryWrapper.subscribe(ListenerRegistryWrapper.java:105)
	at org.apache.dubbo.registry.integration.RegistryDirectory.subscribe(RegistryDirectory.java:95)
	at org.apache.dubbo.registry.integration.RegistryProtocol.doCreateInvoker(RegistryProtocol.java:525)
	at org.apache.dubbo.registry.integration.InterfaceCompatibleRegistryProtocol.getInvoker(InterfaceCompatibleRegistryProtocol.java:63)
	at org.apache.dubbo.registry.client.migration.MigrationInvoker.refreshInterfaceInvoker(MigrationInvoker.java:333)
	at org.apache.dubbo.registry.client.migration.MigrationInvoker.migrateToServiceDiscoveryInvoker(MigrationInvoker.java:113)
	at org.apache.dubbo.registry.client.migration.MigrationRuleHandler.doMigrate(MigrationRuleHandler.java:58)
	at org.apache.dubbo.registry.client.migration.MigrationRuleListener.onRefer(MigrationRuleListener.java:103)
	at org.apache.dubbo.registry.integration.RegistryProtocol.interceptInvoker(RegistryProtocol.java:498)
	at org.apache.dubbo.registry.integration.RegistryProtocol.doRefer(RegistryProtocol.java:483)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:477)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:72)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:81)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:73)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:385)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:313)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:206)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:165)
	at com.alibaba.spring.beans.factory.annotation.AbstractAnnotationBeanPostProcessor.getInjectedObject(AbstractAnnotationBeanPostProcessor.java:409)
	at com.alibaba.spring.beans.factory.annotation.AbstractAnnotationBeanPostProcessor$AnnotatedFieldElement.inject(AbstractAnnotationBeanPostProcessor.java:626)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at com.alibaba.spring.beans.factory.annotation.AbstractAnnotationBeanPostProcessor.postProcessPropertyValues(AbstractAnnotationBeanPostProcessor.java:179)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1425)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.chenyi.yanhuohui.goods.GoodsServiceApplication.main(GoodsServiceApplication.java:20)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,215 INFO [main][DefaultMigrationAddressComparator.java:37] -  [DUBBO] No instance address available, will not migrate., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,216 INFO [main][ReferenceConfig.java:409] -  [DUBBO] Refer dubbo service com.chenyi.yanhuohui.setting.api.GoodsInfoService from url dubbo://localhost:9090/com.chenyi.yanhuohui.setting.api.GoodsInfoService?application=yanhuohui-goods&dubbo=2.0.2&id=defaultSpringCloudRegistryConfig&init=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&pid=8280&qos.enable=false&register.ip=172.21.240.1&registry=spring-cloud&release=2.7.13&revision=1.0-SNAPSHOT&side=consumer&sticky=false&timestamp=1684895547845, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,216 INFO [DubboSaveMetadataReport-thread-1][AbstractMetadataReport.java:287] -  [DUBBO] store consumer metadata. Identifier : org.apache.dubbo.metadata.report.identifier.MetadataIdentifier@7770809a; definition: {init=false, side=consumer, metadata-type=remote, application=yanhuohui-goods, release=2.7.13, methods=fetchGoodsInfoDetail, sticky=false, dubbo=2.0.2, interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService, qos.enable=false, revision=1.0-SNAPSHOT}, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,219 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean '@Reference com.chenyi.yanhuohui.setting.api.GoodsInfoService' of type [org.apache.dubbo.common.bytecode.proxy2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,220 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'merchantController' of type [com.chenyi.yanhuohui.goods.controller.MerchantController] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,228 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'goodsImportController' of type [com.chenyi.yanhuohui.goods.goodsImport.GoodsImportController] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,231 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'dubboConfigConfiguration.Single' of type [org.apache.dubbo.config.spring.context.annotation.DubboConfigConfiguration$Single] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,237 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'dubboConfigConfiguration.Multiple' of type [org.apache.dubbo.config.spring.context.annotation.DubboConfigConfiguration$Multiple] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,249 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration' of type [org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,252 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration' of type [org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,259 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,265 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration$PropagateEventsConfiguration' of type [org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration$PropagateEventsConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,268 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration$ArchaiusEndpointConfiguration' of type [org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration$ArchaiusEndpointConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,289 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,289 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,298 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,299 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,333 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'configurableEnvironmentConfiguration' of type [org.springframework.cloud.netflix.archaius.ConfigurableEnvironmentConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,334 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration' of type [org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,339 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration' of type [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,348 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties' of type [org.springframework.boot.autoconfigure.task.TaskExecutionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,355 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'taskExecutorBuilder' of type [org.springframework.boot.task.TaskExecutorBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,358 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration' of type [org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,397 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,403 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'error' of type [org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$StaticView] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,415 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'beanNameViewResolver' of type [org.springframework.web.servlet.view.BeanNameViewResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,426 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties' of type [org.springframework.boot.autoconfigure.web.ResourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,431 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,440 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'conventionErrorViewResolver' of type [org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,451 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'errorAttributes' of type [org.springframework.boot.web.servlet.error.DefaultErrorAttributes] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,469 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'basicErrorController' of type [org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,506 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' of type [org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,518 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'metricsWebMvcConfigurer' of type [org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration$MetricsWebMvcConfigurer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,519 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' of type [org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,544 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'mvcContentNegotiationManager' of type [org.springframework.web.accept.ContentNegotiationManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,568 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'mvcConversionService' of type [org.springframework.boot.autoconfigure.web.format.WebConversionService] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,582 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'mvcValidator' of type [org.springframework.boot.autoconfigure.validation.ValidatorAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,636 INFO [main][ExecutorConfigurationSupport.java:181] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,637 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'applicationTaskExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,755 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'requestMappingHandlerAdapter' of type [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:28,765 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'mvcResourceUrlProvider' of type [org.springframework.web.servlet.resource.ResourceUrlProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,197 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'requestMappingHandlerMapping' of type [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,246 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'welcomePageHandlerMapping' of type [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,252 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'mvcPathMatcher' of type [org.springframework.util.AntPathMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,256 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'mvcUrlPathHelper' of type [org.springframework.web.util.UrlPathHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,262 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'viewControllerHandlerMapping' of type [org.springframework.beans.factory.support.NullBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,288 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'beanNameHandlerMapping' of type [org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,314 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'routerFunctionMapping' of type [org.springframework.web.servlet.function.support.RouterFunctionMapping] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,352 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'resourceHandlerMapping' of type [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,354 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'defaultServletHandlerMapping' of type [org.springframework.beans.factory.support.NullBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,359 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'handlerFunctionAdapter' of type [org.springframework.web.servlet.function.support.HandlerFunctionAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,367 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'mvcUriComponentsContributor' of type [org.springframework.web.method.support.CompositeUriComponentsContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,370 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'httpRequestHandlerAdapter' of type [org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,374 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'simpleControllerHandlerAdapter' of type [org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,393 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'handlerExceptionResolver' of type [org.springframework.web.servlet.handler.HandlerExceptionResolverComposite] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,410 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'mvcViewResolver' of type [org.springframework.web.servlet.view.ViewResolverComposite] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,464 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'defaultViewResolver' of type [org.springframework.web.servlet.view.InternalResourceViewResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,492 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'viewResolver' of type [org.springframework.web.servlet.view.ContentNegotiatingViewResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,500 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.actuate.DubboMetadataEndpointAutoConfiguration' of type [com.alibaba.cloud.dubbo.actuate.DubboMetadataEndpointAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,526 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,530 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'default.com.alibaba.cloud.nacos.ribbon.RibbonNacosAutoConfiguration.RibbonClientSpecification' of type [org.springframework.cloud.netflix.ribbon.RibbonClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,543 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties' of type [org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,544 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration' of type [org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration$$EnhancerBySpringCGLIB$$9c32579c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:29,563 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'ribbonFeature' of type [org.springframework.cloud.client.actuator.HasFeatures] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,087 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'springClientFactory' of type [org.springframework.cloud.netflix.ribbon.SpringClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,111 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'loadBalancerClient' of type [org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,122 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'propertiesFactory' of type [org.springframework.cloud.netflix.ribbon.PropertiesFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,128 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'ribbon-org.springframework.cloud.netflix.ribbon.ServerIntrospectorProperties' of type [org.springframework.cloud.netflix.ribbon.ServerIntrospectorProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,134 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,164 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,172 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,177 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'ribbonInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,191 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'restTemplateCustomizer' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig$$Lambda$880/1937107943] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,208 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'loadBalancedRestTemplateInitializerDeprecated' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$$Lambda$881/1043260983] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,221 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.cloud.loadbalancer.retry-org.springframework.cloud.client.loadbalancer.LoadBalancerRetryProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRetryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,259 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboLoadBalancedRestTemplateAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboLoadBalancedRestTemplateAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,277 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService' of type [com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,282 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.openfeign.ribbon.DefaultFeignLoadBalancedConfiguration' of type [org.springframework.cloud.openfeign.ribbon.DefaultFeignLoadBalancedConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,290 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.openfeign.ribbon.FeignRibbonClientAutoConfiguration' of type [org.springframework.cloud.openfeign.ribbon.FeignRibbonClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,309 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'cachingLBClientFactory' of type [org.springframework.cloud.openfeign.ribbon.CachingSpringLoadBalancerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,360 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'feignClient' of type [org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,377 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'feignRequestOptions' of type [feign.Request$Options] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,387 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'feign.httpclient-org.springframework.cloud.openfeign.support.FeignHttpClientProperties' of type [org.springframework.cloud.openfeign.support.FeignHttpClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,391 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.openfeign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration' of type [org.springframework.cloud.openfeign.FeignAutoConfiguration$HystrixFeignTargeterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,416 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'feignTargeter' of type [org.springframework.cloud.openfeign.HystrixTargeter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,429 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.openfeign.FeignAutoConfiguration' of type [org.springframework.cloud.openfeign.FeignAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,430 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'feignFeature' of type [org.springframework.cloud.client.actuator.HasFeatures] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,438 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'feignContext' of type [org.springframework.cloud.openfeign.FeignContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,442 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'feign.client-org.springframework.cloud.openfeign.FeignClientProperties' of type [org.springframework.cloud.openfeign.FeignClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,448 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$ParameterResolversConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$ParameterResolversConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,452 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration' of type [org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,457 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties' of type [org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,470 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.nacos.registry.NacosServiceRegistryAutoConfiguration' of type [com.alibaba.cloud.nacos.registry.NacosServiceRegistryAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,479 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosServiceRegistry' of type [com.alibaba.cloud.nacos.registry.NacosServiceRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,578 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties' of type [org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,579 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosRegistration' of type [com.alibaba.cloud.nacos.registry.NacosRegistration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,595 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosAutoServiceRegistration' of type [com.alibaba.cloud.nacos.registry.NacosAutoServiceRegistration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,597 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration' of type [org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,603 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.registry.DubboServiceRegistrationEventPublishingAspect' of type [com.alibaba.cloud.dubbo.registry.DubboServiceRegistrationEventPublishingAspect] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,610 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.bootstrap.DubboBootstrapStartCommandLineRunner' of type [com.alibaba.cloud.dubbo.bootstrap.DubboBootstrapStartCommandLineRunner] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,626 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,632 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration$NacosConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration$NacosConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,637 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'heartbeatEventChangedPredicate' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration$NacosConfiguration$$Lambda$883/1661426385] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,643 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.nacos.NacosConfigAutoConfiguration' of type [com.alibaba.cloud.nacos.NacosConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,658 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosConfigProperties' of type [com.alibaba.cloud.nacos.NacosConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,662 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosRefreshProperties' of type [com.alibaba.cloud.nacos.refresh.NacosRefreshProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,670 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosRefreshHistory' of type [com.alibaba.cloud.nacos.refresh.NacosRefreshHistory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,673 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosConfigManager' of type [com.alibaba.cloud.nacos.NacosConfigManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,686 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosContextRefresher' of type [com.alibaba.cloud.nacos.refresh.NacosContextRefresher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,691 INFO [main][ExecutorConfigurationSupport.java:181] - Initializing ExecutorService 'Nacos-Watch-Task-Scheduler'
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,700 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosWatch' of type [com.alibaba.cloud.nacos.discovery.NacosWatch] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,705 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.nacos.endpoint.NacosConfigEndpointAutoConfiguration' of type [com.alibaba.cloud.nacos.endpoint.NacosConfigEndpointAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,717 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosConfigHealthIndicator' of type [com.alibaba.cloud.nacos.endpoint.NacosConfigHealthIndicator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,721 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.nacos.endpoint.NacosDiscoveryEndpointAutoConfiguration' of type [com.alibaba.cloud.nacos.endpoint.NacosDiscoveryEndpointAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,731 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosDiscoveryHealthIndicator' of type [com.alibaba.cloud.nacos.discovery.actuate.health.NacosDiscoveryHealthIndicator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,735 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.alibaba.cloud.nacos.ribbon.RibbonNacosAutoConfiguration' of type [com.alibaba.cloud.nacos.ribbon.RibbonNacosAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,744 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,747 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,752 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,756 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,760 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'hikariPoolDataSourceMetadataProvider' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration$$Lambda$886/26781267] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,766 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,770 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,773 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,782 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$MapperScannerRegistrarNotFoundConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$MapperScannerRegistrarNotFoundConfiguration$$EnhancerBySpringCGLIB$$1d060b2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,792 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'goodsInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,807 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'dubbo-service-class-base-packages' of type [java.util.LinkedHashSet] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,833 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'dubbo-org.apache.dubbo.spring.boot.autoconfigure.DubboConfigurationProperties' of type [org.apache.dubbo.spring.boot.autoconfigure.DubboConfigurationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,846 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration$$EnhancerBySpringCGLIB$$7c5e5032] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,857 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,875 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$d1ba48f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,884 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'loggingRebinder' of type [org.springframework.cloud.logging.LoggingRebinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,888 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,894 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'servletWebChildContextFactory' of type [org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,901 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'managementServletContext' of type [org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration$$Lambda$887/1777016611] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,907 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.health.LegacyHealthEndpointAdaptersConfiguration' of type [org.springframework.boot.actuate.autoconfigure.health.LegacyHealthEndpointAdaptersConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,910 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.health.LegacyHealthEndpointCompatibilityConfiguration' of type [org.springframework.boot.actuate.autoconfigure.health.LegacyHealthEndpointCompatibilityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,916 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'management.health.status-org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties' of type [org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,926 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'healthAggregator' of type [org.springframework.boot.actuate.health.OrderedHealthAggregator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,932 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'healthStatusHttpMapper' of type [org.springframework.boot.actuate.health.HealthStatusHttpMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,935 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration' of type [org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,939 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,947 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'healthEndpointProperties' of type [org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,957 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'healthStatusAggregator' of type [org.springframework.boot.actuate.health.SimpleStatusAggregator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,966 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'healthHttpCodeStatusMapper' of type [org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,978 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'healthEndpointGroups' of type [org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,982 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:30,987 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties' of type [org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,045 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'diskSpaceHealthIndicator' of type [org.springframework.boot.actuate.system.DiskSpaceHealthIndicator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,050 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,080 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'pingHealthContributor' of type [org.springframework.boot.actuate.health.PingHealthIndicator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,092 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,118 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'dbHealthContributor' of type [org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,121 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration' of type [org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,130 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,140 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'configurationPropertiesRebinder' of type [org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,148 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'refreshScopeHealthIndicator' of type [org.springframework.cloud.health.RefreshScopeHealthIndicator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,152 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration' of type [org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,158 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties' of type [org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,165 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'discoveryClientHealthIndicator' of type [org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,176 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'discoveryCompositeHealthContributor' of type [org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,190 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'healthContributorRegistry' of type [org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,193 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'healthIndicatorRegistry' of type [org.springframework.boot.actuate.autoconfigure.health.HealthContributorRegistryHealthIndicatorRegistryAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,204 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'healthEndpoint' of type [org.springframework.boot.actuate.health.HealthEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,207 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration' of type [org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,211 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'healthEndpointWebExtension' of type [org.springframework.boot.actuate.health.HealthEndpointWebExtension] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,216 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties' of type [org.springframework.boot.autoconfigure.info.ProjectInfoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,218 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' of type [org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,221 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,224 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'envInfoContributor' of type [org.springframework.boot.actuate.info.EnvironmentInfoContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,228 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties' of type [org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,230 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,233 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'infoEndpoint' of type [org.springframework.boot.actuate.info.InfoEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,235 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,240 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'endpointOperationParameterMapper' of type [org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,245 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'endpointCachingOperationInvokerAdvisor' of type [org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,249 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'endpointMediaTypes' of type [org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,255 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'webExposeExcludePropertyEndpointFilter' of type [org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,267 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'webEndpointDiscoverer' of type [org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,270 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'controllerExposeExcludePropertyEndpointFilter' of type [org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,276 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'controllerEndpointDiscoverer' of type [org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,297 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,303 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties' of type [org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,312 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'environmentEndpoint' of type [org.springframework.boot.actuate.env.EnvironmentEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,345 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'environmentEndpointWebExtension' of type [org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,351 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration' of type [org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,357 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'refreshEndpoint' of type [org.springframework.cloud.endpoint.RefreshEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,370 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'pathMappedEndpoints' of type [org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,373 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration' of type [org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,377 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'environmentManager' of type [org.springframework.cloud.context.environment.EnvironmentManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,381 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,391 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,402 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,405 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,407 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration' of type [org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,413 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties' of type [org.springframework.boot.autoconfigure.gson.GsonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,417 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'standardGsonBuilderCustomizer' of type [org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,430 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'gsonBuilder' of type [com.google.gson.GsonBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,435 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'gson' of type [com.google.gson.Gson] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,439 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,442 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration' of type [org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,444 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,451 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,457 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'restTemplateExchangeTagsProvider' of type [org.springframework.boot.actuate.metrics.web.client.DefaultRestTemplateExchangeTagsProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,464 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'metricsRestTemplateCustomizer' of type [org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,473 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'restTemplateBuilder' of type [org.springframework.boot.web.client.RestTemplateBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,477 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,485 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'tomcatMetricsBinder' of type [org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,488 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration' of type [org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,498 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'dispatcherServletMappingDescriptionProvider' of type [org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,501 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration' of type [org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,506 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'servletMappingDescriptionProvider' of type [org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,512 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'filterMappingDescriptionProvider' of type [org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,516 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,520 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration' of type [org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,523 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration' of type [org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,527 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration' of type [org.springframework.boot.autoconfigure.aop.AopAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,531 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration' of type [org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,535 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration' of type [org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,540 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,544 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties' of type [org.springframework.boot.autoconfigure.jdbc.JdbcProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,560 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'jdbcTemplate' of type [org.springframework.jdbc.core.JdbcTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,568 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,580 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'namedParameterJdbcTemplate' of type [org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,584 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,588 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration' of type [org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,591 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.security.oauth2.resourceserver-org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties' of type [org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,594 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration' of type [org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,599 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties' of type [org.springframework.boot.autoconfigure.task.TaskSchedulingProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,603 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'taskSchedulerBuilder' of type [org.springframework.boot.task.TaskSchedulerBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,606 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,614 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,620 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,622 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,635 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,638 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,641 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,643 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,646 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,654 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'transactionTemplate' of type [org.springframework.transaction.support.TransactionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,656 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration' of type [org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,662 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'multipartResolver' of type [org.springframework.web.multipart.support.StandardServletMultipartResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,666 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration' of type [org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,670 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration' of type [org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,674 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'commonsFeatures' of type [org.springframework.cloud.client.actuator.HasFeatures] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,675 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration' of type [org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,679 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.CommonsClientAutoConfiguration' of type [org.springframework.cloud.client.CommonsClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,682 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration' of type [org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,685 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,690 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'asyncLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,694 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'asyncRestTemplateCustomizer' of type [org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,699 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$AsyncRestTemplateCustomizerConfig' of type [org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$AsyncRestTemplateCustomizerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,703 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'loadBalancedAsyncRestTemplateInitializer' of type [org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$AsyncRestTemplateCustomizerConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,706 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,712 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration' of type [org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,717 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration' of type [org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,720 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.commons.httpclient.HttpClientConfiguration$ApacheHttpClientConfiguration' of type [org.springframework.cloud.commons.httpclient.HttpClientConfiguration$ApacheHttpClientConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,726 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'connManFactory' of type [org.springframework.cloud.commons.httpclient.DefaultApacheHttpClientConnectionManagerFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,754 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'apacheHttpClientBuilder' of type [org.apache.http.impl.client.HttpClientBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,760 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'apacheHttpClientFactory' of type [org.springframework.cloud.commons.httpclient.DefaultApacheHttpClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,764 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.commons.httpclient.HttpClientConfiguration' of type [org.springframework.cloud.commons.httpclient.HttpClientConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,768 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration' of type [org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,774 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties' of type [org.springframework.cloud.configuration.CompatibilityVerifierProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,783 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'springBootVersionVerifier' of type [org.springframework.cloud.configuration.SpringBootVersionVerifier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,786 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'compositeCompatibilityVerifier' of type [org.springframework.cloud.configuration.CompositeCompatibilityVerifier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,789 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration' of type [org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,796 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties' of type [org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,802 INFO [main][EndpointLinksResolver.java:58] - Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,830 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'webEndpointServletHandlerMapping' of type [org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,858 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'controllerEndpointHandlerMapping' of type [org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,865 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration' of type [org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,874 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration' of type [org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,877 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration' of type [org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,878 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,884 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'testService' of type [com.chenyi.yanhuohui.goods.service.TestService] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,893 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'ServiceBean:com.chenyi.yanhuohui.goods.api.TestServiceApi' of type [org.apache.dubbo.config.spring.ServiceBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,898 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'merchantService' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,902 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'testServiceApi' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,977 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'nacosConfigProperties' of type [com.alibaba.cloud.nacos.NacosConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,978 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'spring.cloud.config-org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties' of type [org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:31,979 INFO [main][PostProcessorRegistrationDelegate.java:335] - Bean 'encrypt-org.springframework.cloud.bootstrap.encrypt.KeyProperties' of type [org.springframework.cloud.bootstrap.encrypt.KeyProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,046 INFO [main][DubboBootstrap.java:883] -  [DUBBO] DubboBootstrap is starting..., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,094 INFO [main][ServiceConfig.java:600] -  [DUBBO] No valid ip found from environment, try to find valid host from DNS., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,104 INFO [main][ServiceConfig.java:557] -  [DUBBO] Export dubbo service com.chenyi.yanhuohui.goods.api.TestServiceApi to local registry url : injvm://127.0.0.1/com.chenyi.yanhuohui.goods.api.TestServiceApi?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.TestServiceApi&metadata-type=remote&methods=hello&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.TestServiceApi&side=provider&timestamp=1684895552075, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,105 INFO [main][ServiceConfig.java:507] -  [DUBBO] Register dubbo service com.chenyi.yanhuohui.goods.api.TestServiceApi url dubbo://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.TestServiceApi?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.TestServiceApi&metadata-type=remote&methods=hello&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.TestServiceApi&side=provider&timestamp=1684895552075 to registry registry://175.24.186.119:8848/org.apache.dubbo.registry.RegistryService?application=yanhuohui-goods&dubbo=2.0.2&id=org.apache.dubbo.config.RegistryConfig#0&pid=8280&qos.enable=false&registry=nacos&release=2.7.13&timestamp=1684895552075, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,129 INFO [main][AbstractRegistry.java:288] -  [DUBBO] Register: dubbo://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.TestServiceApi?anyhost=true&application=yanhuohui-goods&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.TestServiceApi&metadata-type=remote&methods=hello&pid=8280&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.TestServiceApi&side=provider&timestamp=1684895552075, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,151 INFO [main][AbstractRegistry.java:313] -  [DUBBO] Subscribe: provider://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.TestServiceApi?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.TestServiceApi&metadata-type=remote&methods=hello&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.TestServiceApi&side=provider&timestamp=1684895552075, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,193 INFO [main][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url provider://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.TestServiceApi?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.TestServiceApi&metadata-type=remote&methods=hello&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.TestServiceApi&side=provider&timestamp=1684895552075, urls: [empty://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.TestServiceApi?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.TestServiceApi&metadata-type=remote&methods=hello&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.TestServiceApi&side=provider&timestamp=1684895552075], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,194 INFO [main][ServiceConfig.java:507] -  [DUBBO] Register dubbo service com.chenyi.yanhuohui.goods.api.TestServiceApi url dubbo://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.TestServiceApi?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.TestServiceApi&metadata-type=remote&methods=hello&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.TestServiceApi&side=provider&timestamp=1684895552075 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=yanhuohui-goods&dubbo=2.0.2&id=defaultSpringCloudRegistryConfig&pid=8280&qos.enable=false&registry=spring-cloud&release=2.7.13&timestamp=1684895552075, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,329 INFO [main][AbstractRegistry.java:288] -  [DUBBO] Register: dubbo://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.TestServiceApi?anyhost=true&application=yanhuohui-goods&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.TestServiceApi&metadata-type=remote&methods=hello&pid=8280&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.TestServiceApi&side=provider&timestamp=1684895552075, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,687 INFO [main][AbstractRegistry.java:313] -  [DUBBO] Subscribe: provider://172.21.240.1:20881/com.chenyi.yanhuohui.goods.api.TestServiceApi?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.goods.api.TestServiceApi&metadata-type=remote&methods=hello&pid=8280&qos.enable=false&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.TestServiceApi&side=provider&timestamp=1684895552075, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,689 INFO [DubboSaveMetadataReport-thread-1][AbstractMetadataReport.java:259] -  [DUBBO] store provider metadata. Identifier : org.apache.dubbo.metadata.report.identifier.MetadataIdentifier@6ece6fe; definition: FullServiceDefinition{parameters={side=provider, service.name=ServiceBean:/com.chenyi.yanhuohui.goods.api.TestServiceApi, release=2.7.13, methods=hello, deprecated=false, dubbo=2.0.2, interface=com.chenyi.yanhuohui.goods.api.TestServiceApi, qos.enable=false, generic=false, metadata-type=remote, application=yanhuohui-goods, dynamic=true, anyhost=true}} ServiceDefinition [canonicalName=com.chenyi.yanhuohui.goods.api.TestServiceApi, codeSource=file:/D:/yanhuohui/yanhuohui-goods/yanhuohui-goods-api/target/classes/, methods=[MethodDefinition [name=hello, parameterTypes=[], returnType=void]]], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,696 INFO [main][DubboBootstrap.java:914] -  [DUBBO] DubboBootstrap is ready., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,700 INFO [main][DubboBootstrap.java:920] -  [DUBBO] DubboBootstrap has started., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,703 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-8090"]
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:32,740 INFO [main][TomcatWebServer.java:203] - Tomcat started on port(s): 8090 (http) with context path '/goods'
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:33,120 INFO [main][ServiceConfig.java:600] -  [DUBBO] No valid ip found from environment, try to find valid host from DNS., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:33,127 INFO [main][ServiceConfig.java:557] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-goods&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=8280&qos.enable=false&release=2.7.13&revision=2.2.7.RELEASE&service.name=ServiceBean:yanhuohui-goods/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=provider&timestamp=1684895553115&version=1.0.0, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:33,128 INFO [main][ServiceConfig.java:507] -  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://172.21.240.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-goods&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=8280&qos.enable=false&release=2.7.13&revision=2.2.7.RELEASE&service.name=ServiceBean:yanhuohui-goods/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=provider&timestamp=1684895553115&version=1.0.0 to registry registry://175.24.186.119:8848/org.apache.dubbo.registry.RegistryService?application=yanhuohui-goods&dubbo=2.0.2&id=org.apache.dubbo.config.RegistryConfig#0&pid=8280&qos.enable=false&registry=nacos&release=2.7.13&timestamp=1684895553114, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:33,147 INFO [main][AbstractRegistry.java:288] -  [DUBBO] Register: dubbo://172.21.240.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-goods&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-goods&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=8280&release=2.7.13&revision=2.2.7.RELEASE&service.name=ServiceBean:yanhuohui-goods/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=provider&timestamp=1684895553115&version=1.0.0, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:33,165 INFO [main][AbstractRegistry.java:313] -  [DUBBO] Subscribe: provider://172.21.240.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-goods&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=8280&qos.enable=false&release=2.7.13&revision=2.2.7.RELEASE&service.name=ServiceBean:yanhuohui-goods/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=provider&timestamp=1684895553115&version=1.0.0, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:33,184 INFO [main][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url provider://172.21.240.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-goods&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=8280&qos.enable=false&release=2.7.13&revision=2.2.7.RELEASE&service.name=ServiceBean:yanhuohui-goods/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=provider&timestamp=1684895553115&version=1.0.0, urls: [empty://172.21.240.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-goods&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=8280&qos.enable=false&release=2.7.13&revision=2.2.7.RELEASE&service.name=ServiceBean:yanhuohui-goods/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=provider&timestamp=1684895553115&version=1.0.0], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:33,185 INFO [main][ServiceConfig.java:507] -  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://172.21.240.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-goods&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=8280&qos.enable=false&release=2.7.13&revision=2.2.7.RELEASE&service.name=ServiceBean:yanhuohui-goods/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=provider&timestamp=1684895553115&version=1.0.0 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=yanhuohui-goods&dubbo=2.0.2&id=defaultSpringCloudRegistryConfig&pid=8280&qos.enable=false&registry=spring-cloud&release=2.7.13&timestamp=1684895553115, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:33,356 INFO [main][AbstractRegistry.java:288] -  [DUBBO] Register: dubbo://172.21.240.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-goods&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-goods&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=8280&release=2.7.13&revision=2.2.7.RELEASE&service.name=ServiceBean:yanhuohui-goods/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=provider&timestamp=1684895553115&version=1.0.0, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:33,631 INFO [main][AbstractRegistry.java:313] -  [DUBBO] Subscribe: provider://172.21.240.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-goods&bind.ip=172.21.240.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-goods&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=8280&qos.enable=false&release=2.7.13&revision=2.2.7.RELEASE&service.name=ServiceBean:yanhuohui-goods/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=provider&timestamp=1684895553115&version=1.0.0, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:33,633 INFO [DubboSaveMetadataReport-thread-1][AbstractMetadataReport.java:259] -  [DUBBO] store provider metadata. Identifier : org.apache.dubbo.metadata.report.identifier.MetadataIdentifier@4cd779db; definition: FullServiceDefinition{parameters={side=provider, service.name=ServiceBean:yanhuohui-goods/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0, release=2.7.13, methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs, deprecated=false, dubbo=2.0.2, interface=com.alibaba.cloud.dubbo.service.DubboMetadataService, version=1.0.0, qos.enable=false, generic=false, revision=2.2.7.RELEASE, metadata-type=remote, application=yanhuohui-goods, dynamic=true, group=yanhuohui-goods, anyhost=true}} ServiceDefinition [canonicalName=com.alibaba.cloud.dubbo.service.DubboMetadataService, codeSource=spring-cloud-starter-dubbo-2.2.7.RELEASE.jar, methods=[MethodDefinition [name=getExportedURLs, parameterTypes=[java.lang.String, java.lang.String, java.lang.String], returnType=java.lang.String], MethodDefinition [name=getAllServiceKeys, parameterTypes=[], returnType=java.util.Set<java.lang.String>], MethodDefinition [name=getAllExportedURLs, parameterTypes=[], returnType=java.util.Map<java.lang.String,java.lang.String>], MethodDefinition [name=getServiceRestMetadata, parameterTypes=[], returnType=java.lang.String]]], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:33,634 INFO [main][DubboMetadataServiceExporter.java:85] - The Dubbo service[<dubbo:service unexported="false" serviceName="ServiceBean:yanhuohui-goods/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0" exported="true" />] has been exported.
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:33,665 INFO [main][NacosServiceRegistry.java:75] - nacos registry, DEFAULT_GROUP yanhuohui-goods 172.16.40.92:8090 register finished
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:32:33,674 INFO [main][StartupInfoLogger.java:61] - Started GoodsServiceApplication in 22.243 seconds (JVM running for 24.291)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:33:14,386 INFO [http-nio-8090-exec-2][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:33:14,386 INFO [http-nio-8090-exec-2][FrameworkServlet.java:525] - Initializing Servlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:33:14,400 INFO [http-nio-8090-exec-2][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver' of type [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:33:14,411 INFO [http-nio-8090-exec-2][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.web.servlet.theme.FixedThemeResolver' of type [org.springframework.web.servlet.theme.FixedThemeResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:33:14,420 INFO [http-nio-8090-exec-2][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator' of type [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:33:14,433 INFO [http-nio-8090-exec-2][PostProcessorRegistrationDelegate.java:335] - Bean 'org.springframework.web.servlet.support.SessionFlashMapManager' of type [org.springframework.web.servlet.support.SessionFlashMapManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:33:14,435 INFO [http-nio-8090-exec-2][FrameworkServlet.java:547] - Completed initialization in 49 ms
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:33:14,886 ERROR [http-nio-8090-exec-2][ExceptionFilter.java:79] -  [DUBBO] Got unchecked and undeclared exception which called by 127.0.0.1. service: com.chenyi.yanhuohui.goods.api.MerchantService, method: queryMerchantById, exception: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
### The error may exist in com/chenyi/yanhuohui/goods/mapper/MerchantMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=?
### Cause: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist, dubbo version: 2.7.13, current host: 172.21.240.1
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
### The error may exist in com/chenyi/yanhuohui/goods/mapper/MerchantMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=?
### Cause: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy141.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:99)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy142.selectById(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectById(Unknown Source)
	at com.chenyi.yanhuohui.goods.service.MerchantServiceImpl.queryMerchantById(MerchantServiceImpl.java:42)
	at org.apache.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:46)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:91)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:52)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:192)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:129)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.protocol.injvm.InjvmInvoker.doInvoke(InjvmInvoker.java:101)
	at org.apache.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:173)
	at org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker.invoke(AsyncToSyncInvoker.java:52)
	at org.apache.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:78)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:91)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:52)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:69)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:96)
	at org.apache.dubbo.common.bytecode.proxy1.queryMerchantById(proxy1.java)
	at com.chenyi.yanhuohui.goods.controller.MerchantController.queryMerchantById(MerchantController.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy163.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy162.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 104 more
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:33:14,907 ERROR [http-nio-8090-exec-2][DirectJDKLog.java:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [/goods] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
### The error may exist in com/chenyi/yanhuohui/goods/mapper/MerchantMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=?
### Cause: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
### The error may exist in com/chenyi/yanhuohui/goods/mapper/MerchantMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=?
### Cause: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy141.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:99)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy142.selectById(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectById(Unknown Source)
	at com.chenyi.yanhuohui.goods.service.MerchantServiceImpl.queryMerchantById(MerchantServiceImpl.java:42)
	at org.apache.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:46)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:91)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:52)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:192)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:129)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.protocol.injvm.InjvmInvoker.doInvoke(InjvmInvoker.java:101)
	at org.apache.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:173)
	at org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker.invoke(AsyncToSyncInvoker.java:52)
	at org.apache.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:78)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:91)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:52)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:69)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:96)
	at org.apache.dubbo.common.bytecode.proxy1.queryMerchantById(proxy1.java)
	at com.chenyi.yanhuohui.goods.controller.MerchantController.queryMerchantById(MerchantController.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy163.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy162.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 104 more
] with root cause
java.lang.RuntimeException: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
### The error may exist in com/chenyi/yanhuohui/goods/mapper/MerchantMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=?
### Cause: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
### The error may exist in com/chenyi/yanhuohui/goods/mapper/MerchantMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=?
### Cause: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy141.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:99)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy142.selectById(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy143.selectById(Unknown Source)
	at com.chenyi.yanhuohui.goods.service.MerchantServiceImpl.queryMerchantById(MerchantServiceImpl.java:42)
	at org.apache.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:46)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:91)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:52)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:192)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:129)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.protocol.injvm.InjvmInvoker.doInvoke(InjvmInvoker.java:101)
	at org.apache.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:173)
	at org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker.invoke(AsyncToSyncInvoker.java:52)
	at org.apache.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:78)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:91)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:52)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:69)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:96)
	at org.apache.dubbo.common.bytecode.proxy1.queryMerchantById(proxy1.java)
	at com.chenyi.yanhuohui.goods.controller.MerchantController.queryMerchantById(MerchantController.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: Table 'yanhuohui-goods.merchant' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy163.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy162.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 104 more

	at org.apache.dubbo.rpc.filter.ExceptionFilter.onResponse(ExceptionFilter.java:98)
	at org.apache.dubbo.rpc.protocol.FilterNode.lambda$invoke$0(FilterNode.java:99)
	at org.apache.dubbo.rpc.AsyncRpcResult.lambda$whenCompleteWithContext$0(AsyncRpcResult.java:197)
	at java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:760)
	at java.util.concurrent.CompletableFuture.uniWhenCompleteStage(CompletableFuture.java:778)
	at java.util.concurrent.CompletableFuture.whenComplete(CompletableFuture.java:2140)
	at org.apache.dubbo.rpc.AsyncRpcResult.whenCompleteWithContext(AsyncRpcResult.java:195)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:81)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:192)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:129)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.protocol.injvm.InjvmInvoker.doInvoke(InjvmInvoker.java:101)
	at org.apache.dubbo.rpc.protocol.AbstractInvoker.invoke(AbstractInvoker.java:173)
	at org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker.invoke(AsyncToSyncInvoker.java:52)
	at org.apache.dubbo.rpc.listener.ListenerInvokerWrapper.invoke(ListenerInvokerWrapper.java:78)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:91)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.FutureFilter.invoke(FutureFilter.java:52)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.filter.ConsumerContextFilter.invoke(ConsumerContextFilter.java:69)
	at org.apache.dubbo.rpc.protocol.FilterNode.invoke(FilterNode.java:61)
	at org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:96)
	at org.apache.dubbo.common.bytecode.proxy1.queryMerchantById(proxy1.java)
	at com.chenyi.yanhuohui.goods.controller.MerchantController.queryMerchantById(MerchantController.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:747)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:35:40,967 INFO [NettyClientWorker-4-1][NettyClientHandler.java:76] -  [DUBBO] The connection of /172.21.240.1:61105 -> /172.21.240.1:20880 is disconnected., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:35:45,815 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][DubboServiceDiscoveryAutoConfiguration.java:171] - The event of the service instances[name : yanhuohui-setting , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:35:45,819 WARN [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][DubboCloudRegistry.java:256] - APP yanhuohui-setting instance changed, size changed zero!!!
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:35:45,828 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][DefaultMigrationAddressComparator.java:37] -  [DUBBO] No instance address available, will not migrate., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:08,517 INFO [NettyServerWorker-3-1][NettyServerHandler.java:76] -  [DUBBO] The connection of /172.21.240.1:61576 -> /172.21.240.1:20881 is established., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:11,344 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][DubboServiceDiscoveryAutoConfiguration.java:171] - The event of the service instances[name : yanhuohui-setting , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:11,347 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][DubboCloudRegistry.java:259] - APP yanhuohui-setting instance changed, size changed to 1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:11,361 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][DefaultMigrationAddressComparator.java:37] -  [DUBBO] No instance address available, will not migrate., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:11,379 INFO [NettyClientWorker-4-2][NettyClientHandler.java:62] -  [DUBBO] The connection of /172.21.240.1:61583 -> /172.21.240.1:20880 is established., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:11,382 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][NettyClient.java:145] -  [DUBBO] Close old netty channel [id: 0x388b83f1, L:/172.21.240.1:61105 ! R:/172.21.240.1:20880] on create new netty channel [id: 0xd0cd4e1c, L:/172.21.240.1:61583 - R:/172.21.240.1:20880], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:11,385 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][AbstractClient.java:207] -  [DUBBO] Successed connect to server /172.21.240.1:20880 from NettyClient 172.21.240.1 using dubbo version 2.7.13, channel is NettyChannel [channel=[id: 0xd0cd4e1c, L:/172.21.240.1:61583 - R:/172.21.240.1:20880]], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:11,441 INFO [NettyClientWorker-4-3][NettyClientHandler.java:62] -  [DUBBO] The connection of /172.16.40.92:61584 -> /172.16.40.92:20880 is established., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:11,443 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][AbstractClient.java:207] -  [DUBBO] Successed connect to server /172.16.40.92:20880 from NettyClient 172.21.240.1 using dubbo version 2.7.13, channel is NettyChannel [channel=[id: 0xa8df9607, L:/172.16.40.92:61584 - R:/172.16.40.92:20880]], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:11,443 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][AbstractClient.java:75] -  [DUBBO] Start NettyClient /172.21.240.1 connect to the server /172.16.40.92:20880, dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:11,445 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][DefaultMigrationAddressComparator.java:37] -  [DUBBO] No instance address available, will not migrate., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:27,914 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url consumer://172.21.240.1/org.apache.dubbo.rpc.service.GenericService?application=yanhuohui-goods&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&pid=8280&qos.enable=false&release=2.7.13&router=-default,revisionRouter&side=consumer&sticky=false&timestamp=1684895546121&version=1.0.0, urls: [dubbo://172.21.240.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=yanhuohui-setting&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=yanhuohui-setting&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&metadata-type=remote&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=4896&protocol=dubbo&release=2.7.13&revision=2.2.7.RELEASE&service.name=ServiceBean:yanhuohui-setting/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0&side=provider&timestamp=1684895770261&version=1.0.0], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:27,920 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][DefaultMigrationAddressComparator.java:37] -  [DUBBO] No instance address available, will not migrate., dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:29,279 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][AbstractRegistry.java:410] -  [DUBBO] Notify urls for subscribe url consumer://172.21.240.1/com.chenyi.yanhuohui.setting.api.GoodsInfoService?application=yanhuohui-goods&category=providers,configurators,routers&dubbo=2.0.2&init=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&pid=8280&qos.enable=false&release=2.7.13&revision=1.0-SNAPSHOT&side=consumer&sticky=false&timestamp=1684895547845, urls: [dubbo://172.21.240.1:20880/com.chenyi.yanhuohui.setting.api.GoodsInfoService?anyhost=true&application=yanhuohui-setting&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.chenyi.yanhuohui.setting.api.GoodsInfoService&metadata-type=remote&methods=fetchGoodsInfoDetail&path=com.chenyi.yanhuohui.setting.api.GoodsInfoService&pid=4896&protocol=dubbo&release=2.7.13&service.name=ServiceBean:/com.chenyi.yanhuohui.setting.api.GoodsInfoService&side=provider&timestamp=1684895766859], dubbo version: 2.7.13, current host: 172.21.240.1
[${project.name}][${env:SERVER_PORT}] 2023-05-24 10:36:29,283 INFO [nacos.publisher-com.alibaba.nacos.client.naming.event.InstancesChangeEvent][DefaultMigrationAddressComparator.java:37] -  [DUBBO] No instance address available, will not migrate., dubbo version: 2.7.13, current host: 172.21.240.1
